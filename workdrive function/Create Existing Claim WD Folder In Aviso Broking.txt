total_policy = 25000;
pages = total_policy / 100;
total_page = pages.truncate(0);
frac_page = pages.frac();
if(frac_page != 0.00)
{
	total_page = total_page + 1;
}
iterationString = "".leftPad(total_page);
stringLength = iterationString.length();
iterationString = iterationString.replaceAll(" ",",");
iterationString = iterationString.subString(0,iterationString.length() - 1);
loops = iterationString.toList();
page = 0;
offset = 0;
moreRecords = 1;
Created_Year = getYear(now);
for each  el in loops
{
	if(moreRecords == 1)
	{
		queryMap1 = Map();
		queryMap1.put("select_query","select Client.Account_Name as ClientName, Client.zohoworkdriveforcrm__Workdrive_Folder_ID as ClientWorkdriveId,Type_of_Claim , Date_of_Loss	,Claim_Description from Claims where (Client is not null and  Claim_WorkDrive_Folder_Id is null)   LIMIT " + offset + ", 100");
		response1 = invokeurl
		[
			url :"https://www.zohoapis.com.au/crm/v3/coql"
			type :POST
			parameters:queryMap1.toString()
			connection:"avisio_broking_current_policies"
		];
		records = ifNull(response1.get("data"),null);
		if(records.size() >= 1)
		{
			//info records ;
			for each  Claim in records
			{
				//	info policy ;
				ClaimId = Claim.get("id");
				info ClaimId;
				DateofLoss1 = ifNull(Claim.get("Date_of_Loss"),"0000-00-00");
				//info From_Date1 ;
				if(DateofLoss1 != "0000-00-00")
				{
					DateofLoss = DateofLoss1.Tostring("dd-MM-yyyy");
					//info fromdate;
				}
				ClaimDescription = Claim.get("Claim_Description");
				clientName = Claim.get("ClientName");
				clientFolderId = Claim.get("ClientWorkdriveId");
				Type_of_Policy = Claim.get("Type_of_Claim");
				ClaimFolderName = clientName + " - " + Type_of_Policy + " - " + ClaimDescription + " - " + DateofLoss;
				header = Map();
				header.put("Accept","application/vnd.api+json");
				response = invokeurl
				[
					url :"https://www.zohoapis.com.au/workdrive/api/v1/files/" + clientFolderId + "/files?page%5Blimit%5D=50&page%5Boffset%5D=0"
					type :GET
					headers:header
					connection:"workdrive"
				];
				AccountSubFolders = response.getJSON("data");
				for each  folder in AccountSubFolders
				{
					name = folder.get('attributes').get('name');
					if(name == "Claims")
					{
						ClaimFolderId = folder.get('id');
						//	info PolicieFolderId ;
						response1 = invokeurl
						[
							url :"https://www.zohoapis.com.au/workdrive/api/v1/files/" + ClaimFolderId + "/files?page%5Blimit%5D=50&page%5Boffset%5D=0"
							type :GET
							headers:header
							connection:"workdrive"
						];
						//info response1 ;
						YearFolder = ifNull(response1.getJSON("data"),000);
						//	info YearFolder ;
						if(YearFolder != 000)
						{
							YearFolderId = YearFolder.getJSON('id');
							//info YearFolderId;
							Claim_Folder = zoho.workdrive.createFolder(ClaimFolderName,YearFolderId,"workdrive");
							Claim_Folder_Id = Claim_Folder.get("data").get("id");
							info Claim_Folder;
							param = Map();
							param.put("Claim_WorkDrive_Folder_Id",Claim_Folder_Id);
							Res = zoho.crm.updateRecord("Claims",ClaimId,param);
						}
						//info Res ;
					}
				}
			}
		}
		else
		{
			moreRecords = 0;
		}
	}
	page = page + 1;
	offset = offset + 100;
}